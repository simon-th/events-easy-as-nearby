{"version":3,"sources":["About/angel.jpg","About/simon.jpg","About/yash.jpg","About/jovin.jpg","About/shania.jpg","About/huy.jpg","EventMap/Geolocation.js","MyEvents/MyEvents.js","EventMap/EventMap.js","About/About.js","Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Login/Login.js","Explore/Explore.js","Signup/Signup.js","Logout/Logout.js","Components/Session/context.js","App/Navigation.js","App/App.js","Components/Session/withAuthentication.js","serviceWorker.js","index.js"],"names":["module","exports","curLat","curLng","mapStyles","position","width","height","left","CurrentLocation","props","initialCenter","lat","lng","iniLat","iniLng","state","currentLocation","prevProps","prevState","google","this","loadMap","recenterMap","map","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","initLat","latitude","longitude","if","firstload","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","style","ref","renderChildren","Component","defaultProps","visible","MyEvents","eventList","id","title","descr","long","claseName","Row","Col","sm","size","offset","Card","CardBody","CardTitle","CardSubtitle","location","CardText","className","Button","color","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","onClick","name","GoogleApiWrapper","apiKeys","googleMaps","contributorInfo","angellynncheng","image","Angel","username","major","bio","responsibilities","Simon","Yash","jovinjoej","Jovin","shaniapaul","Shania","qhuy2301","Huy","defContributorStats","commits","issues","unitTests","AboutPage","contributorStats","issuesTotal","commitsTotal","unitTestsTotal","contributorKeys","attemptFetch","url","n","a","i","fetch","response","console","log","status","json","data","error","fetchGithubStats","forEach","contributor","author","login","total","issue","user","fetchIssues","fetchCommits","calculateUnitTests","key","body","cursor","padding","tag","window","open","CardHeader","flipOnHover","flipOnClick","flipDirection","r","flippy","align","CardImg","top","src","alt","backgroundColor","profiles","length","push","Container","CardDeck","renderProfile","Jumbotron","fluid","href","renderProfiles","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","FirebaseContext","createContext","withFirebase","Consumer","firebase","config","apiKey","firebaseAPI","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","INITIAL_STATE","LoginFormBase","onSubmit","event","then","history","catch","preventDefault","onChange","target","value","isInvalid","Form","FormGroup","controlId","bsSize","Label","Input","autoFocus","type","disabled","message","to","LoginForm","compose","withRouter","Login","Explore","classname","passwordOne","passwordTwo","SignUpFormBase","authUser","SignUpForm","SignUp","makeStyles","theme","input","display","margin","AuthUserContext","NavigationAuth","Navbar","light","expand","exact","NavbarBrand","Nav","navbar","NavLink","Logout","NavigationNonAuth","Navigation","withAuthentication","WithAuthentication","listener","onAuthStateChanged","Provider","path","render","Fragment","component","About","EventMap","Signup","Boolean","hostname","match","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc9d8d7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angel.37b26633.jpg\";","module.exports = __webpack_public_path__ + \"static/media/simon.abeddfa6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yash.f44569c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jovin.66916f81.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shania.72c7f34a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/huy.839e144d.jpg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '50%',\n    height: '50%',\n    left: '350px'\n  }\n};\nvar curLat, curLng;\nvar firstload = true;\n\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    const { iniLat, iniLng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng,\n        iniLat: iniLat,\n        iniLng: iniLng\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n   recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              initLat: coords.latitude,\n              iniLng: coords.longitude,\n              lat: coords.latitude,\n              lng: coords.longitude\n            },\n            if (firstload) {\n              curLat = coords.latitude;\n              curLng = coords.longitude;\n              firstload = false;\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n   renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n     const style = Object.assign({}, mapStyles.map);\n    return (\n      <div>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n\n}\n\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: curLat,\n    lng: curLng\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};\n","import React, {Component} from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Row, Col\n} from 'reactstrap';\n\nclass MyEvents extends Component {\n  eventList = [\n    {\n      id: 0,\n      title: \"Yash's Birthday\",\n      descr: \"Come celebrate Yash's 21st birthday at Skyloft! It's a study party so bring your own books.\",\n      lat: 30.286358,\n      long: -97.7456957\n    },\n    {\n      id: 1,\n      title: \"Wood Chopping Contest\",\n      descr: \"We're not sure why this is a thing but it is, so come out and chop wood at Gregory Gymanisum.. I guess?\",\n      lat: 30.2842331,\n      long: -97.7386967\n    },\n    {\n      id: 2,\n      title: \"Snakes and Ladders Night\",\n      descr: \"Join us for snakes and ladders at Angel's apartment!\",\n      lat: 30.2870417,\n      long: -97.7461794\n    },\n    {\n      id: 3,\n      title: \"Smash Tournament\",\n      descr: \"Come play Smash at Simon's apartment!\",\n      lat: 30.2900117,\n      long: -97.7445804\n    },\n    {\n      id: 4,\n      title: \"IEEE GM #3\",\n      descr: \"This is the third general meeting for IEEE this semester. As usual, there will be free food, and we will be joined by guests from Arm!\",\n      lat: 30.2884957,\n      long: -97.7376979\n    },\n    {\n      id: 5,\n      title: \"Spongebob Watch Party\",\n      descr: \"We will be watching episodes with Mermaid Man and Barnacle Boy because they are our favorite characters.\",\n      lat: 30.2864807,\n      long: -97.743338\n    },\n    {\n      id: 6,\n      title: \"Gong Cha Profit Share\",\n      descr: \"Boba. Yay.\",\n      lat: 30.3753425,\n      long: -97.8380101\n    }\n  ]\n\n  render () {\n    return(\n      <div>\n        <div claseName=\"text-center\">\n          <h2>Saved Events</h2>\n        </div>\n        <div>\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[1].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[1].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[1].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[2].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[2].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[2].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[3].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[3].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[3].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyEvents;\n","import React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from './Geolocation';\nimport apiKeys from '../api-keys.json';\nimport MyEvents from '../MyEvents/MyEvents';\nimport CustomMarker from '../Components/CustomMarker/CustomMarker';\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CurrentLocation\n        centerAroundCurrentLocation\n        google={this.props.google}\n      >\n        <Marker position={{lat: 30.286358, lng: -97.7456957}} onClick={this.onMarkerClick} name={'Yash Birthday'} />\n        <Marker position={{lat: 30.2842331, lng: -97.7386967}} onClick={this.onMarkerClick} name={'Wood Chopping Contest'} />\n        <Marker position={{lat: 30.2870417, lng: -97.7461794}} onClick={this.onMarkerClick} name={'Snakes and Ladders Night'} />\n        <Marker position={{lat: 30.2900117, lng: -97.7445804}} onClick={this.onMarkerClick} name={'Smash Tournament'} />\n        <Marker position={{lat: 30.2884957, lng: -97.7376979}} onClick={this.onMarkerClick} name={'IEEE GM #3'} />\n        <Marker position={{lat: 30.2864807, lng: -97.743338}} onClick={this.onMarkerClick} name={'Spongebob Watch Party'} />\n        <Marker position={{lat: 30.2834028, lng: -97.7412837}} onClick={this.onMarkerClick} name={'Gong Cha Profit Share'} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n\n\n\nexport default GoogleApiWrapper({\n  'apiKey': apiKeys.googleMaps\n})(MapContainer);\n","import React from 'react';\nimport './About.css';\nimport {\n    Card,\n    CardImg,\n    CardText,\n    Container,\n    CardDeck,\n    CardHeader,\n    Jumbotron,\n    ListGroup,\n    ListGroupItem,\n    ListGroupItemHeading,\n    ListGroupItemText\n} from 'reactstrap';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport Angel from './angel.jpg';\nimport Simon from './simon.jpg';\nimport Yash from './yash.jpg';\nimport Jovin from './jovin.jpg';\nimport Shania from './shania.jpg';\nimport Huy from './huy.jpg';\n\nconst contributorInfo = {\n    angellynncheng: {\n        name: 'Angel Cheng',\n        image: Angel,\n        username: 'angellynncheng',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Angel is a third-year ECE major with technical cores in Software and Academic Enrichment. Her interests include drawing, pettings dogs, and watching movies.',\n        responsibilities:\n            'Angel worked on the frontend team to implement the UI design. She added the information for the About page, added the Explore page, and cleaned the user interface formatting.'\n    },\n    'simon-th': {\n        name: 'Simon Hoque',\n        image: Simon,\n        username: 'simon-th',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Simon is a third-year ECE major with technical cores in Software and Academic Enrichment. He spends most of his free time listening to EDM, playing soccer, and browsing on the Uniqlo website.',\n        responsibilities:\n            'Simon contributed mainly to the backend by structuring the git tree, setting up the hard-coded events, and working on API calls. '\n    },\n    'yashlad': {\n        name: 'Yash Lad',\n        image: Yash,\n        username: 'yashlad',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Yash is a third-year ECE major with technical cores in Software and Academic Enrichment. His hobbies consist of PC gaming, dancing, and playing basketball.',\n        responsibilities:\n            'Yash was on the frontend team; he implemented the initial UI structure by adding the Map page, Login/Register pages, and the Saved Events.'\n    },\n    jovinjoej: {\n        name: 'Jovin Joseph',\n        image: Jovin,\n        username: 'jovinjoej',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Jovin is a fourth-year ECE major with technical cores in Software and Academic Enrichment. He enjoys photography, playing volleyball, and spending time with friends.',\n        responsibilities:\n            'Jovin contributed to much of the logistics; he contributed to a lot of the proposal and reports, and kept everyone on the same page.'\n    },\n    shaniapaul: {\n        name: 'Shania Paul',\n        image: Shania,\n        username: 'shaniapaul',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Shania is a third-year ECE major with technical cores in Software and Academic Enrichment. Her interests involve dancing, dancing, and more dancing (Go Texas Bhangra!!!).',\n        responsibilities:\n            'Shania worked on the frontend team focusing on the map implementation. She pinpointed the user geolocation for the map image and added event location markers.'\n    },\n    qhuy2301: {\n        name: 'Huy Le',\n        image: Huy,\n        username: 'qhuy2301',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Huy is a fifth-year ECE major with technical cores in Software and Integrated Circuit. His hobbies include playing videogames and watching sports.',\n        responsibilities:\n            'Huy worked on both frontend and backend. He initialized the app and redesigned the UI to be sleek with animations and displayed API data onto the webpage.'\n    }\n};\n\nconst defContributorStats = {\n    'angellynncheng': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'simon-th': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'yashlad': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'jovinjoej': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'shaniapaul': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'qhuy2301': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    }\n};\n\nclass AboutPage extends React.Component {\n    state = {\n        contributorStats: defContributorStats,\n        issuesTotal: 0,\n        commitsTotal: 0,\n        unitTestsTotal: 0\n    };\n\n    contributorKeys = ['angellynncheng', 'simon-th', 'yashlad', 'jovinjoej', 'shaniapaul', 'qhuy2301'];\n\n    componentDidMount() {\n        console.log('componentDidMount');\n        this.fetchGithubStats();\n    }\n\n    attemptFetch = async (url, n) => {\n        let error;\n        for (let i = 0; i < n; i++) {\n            try {\n                // fetch() and json() are asynchronous\n                // we use await to make the main thread wait until the asynchronous thread terminates and returns a value\n                const response = await fetch(url); // make get request to url and wait until response is returned\n                console.log('fetch response', response);\n                if (response.status === 200) {\n                    const data = await response.json(); // convert response to a json object and wait until the data is returned\n                    console.log('data', data);\n                    return data;\n                }\n            } catch (err) {\n                error = err;\n            }\n        }\n        throw error;\n    };\n\n    async fetchCommits() {\n        let commitsTotal = 0;\n        const url = 'https://api.github.com/repos/simon-th/explocation/stats/contributors';\n\n        try {\n            const data = await this.attemptFetch(url, 3);\n            // loop through array\n            console.log('fetchCommits', data);\n            data.forEach(contributor => {\n                const username = contributor.author.login;\n                defContributorStats[username].commits = contributor.total;\n                commitsTotal += contributor.total;\n            });\n\n            this.setState({ commitsTotal });\n        } catch (err) {\n            console.log('error fetching stats check connection');\n        }\n    }\n\n    async fetchIssues() {\n        let issuesTotal = 0;\n        const url = 'https://api.github.com/repos/simon-th/explocation/issues';\n\n        try {\n            const data = await this.attemptFetch(url, 3);\n            console.log('fetchIssues', data);\n            data.forEach(issue => {\n                const username = issue.user.login;\n                defContributorStats[username].issues++;\n                issuesTotal++;\n            });\n\n            this.setState({ issuesTotal });\n        } catch (err) {\n            console.log('error fetching stats check connection');\n        }\n    }\n\n    fetchGithubStats() {\n        this.fetchIssues();\n        this.fetchCommits();\n        this.calculateUnitTests();\n        this.setState({ contributorStats: defContributorStats });\n    }\n\n    calculateUnitTests() {\n        let unitTestsTotal = 0;\n        this.contributorKeys.forEach(username => {\n            unitTestsTotal += defContributorStats[username].unitTests;\n        });\n        this.setState({ unitTestsTotal });\n    }\n\n    renderProfile(id) {\n        const username = this.contributorKeys[id];\n        const { contributorStats } = this.state;\n\n        return (\n          <Card\n                key={id}\n                body\n                style={{cursor: 'pointer', padding: '0'}}\n                width=\"80%\"\n                className=\"text-center\"\n                tag=\"a\"\n                onClick={() => window.open(`https://github.com/${username}`)}\n            >\n            <CardHeader className=\"text-center\" tag=\"name\">\n                      {contributorInfo[username].name}\n                  </CardHeader>\n              <Flippy\n                  flipOnHover={true}\n                  flipOnClick={false}\n                  flipDirection=\"horizontal\"\n                  ref={(r) => this.flippy = r}\n              >\n                  <FrontSide style={{align: 'center', padding: '0'}}>\n                      <CardImg top width=\"100%\" src={contributorInfo[username].image} alt=\"Error\" style={{align: 'center'}} />\n                  </FrontSide>\n                  <BackSide style={{ backgroundColor: 'white', align: 'center'}}>\n                      <p id=\"b\">Major: {contributorInfo[username].major}<br/>\n                      Username: {contributorInfo[username].username}<br/>\n                      Commits: {contributorStats[username].commits}<br/>\n                      Issues: {contributorStats[username].issues}<br/>\n                      Unit Tests: {contributorStats[username].unitTests}<br/>\n                      </p>\n                      <p id=\"b\">Bio: {contributorInfo[username].bio}</p>\n                      <p id=\"b\">Responsibilities: {contributorInfo[username].responsibilities}</p>\n                  </BackSide>\n              </Flippy>\n            </Card>\n        );\n    }\n\n    renderProfiles() {\n        const profiles = [];\n        for (let id = 0; id < this.contributorKeys.length; id += 3) {\n            // render each row\n            profiles.push(\n                <Container key={id}>\n                    <CardDeck tag=\"cd\" style = {{align: 'center'}}>\n                        {this.renderProfile(id)}\n                        {this.renderProfile(id + 1)}\n                        {this.renderProfile(id + 2)}\n                    </CardDeck>\n                    <br />\n                </Container>\n            );\n        }\n        return profiles;\n    }\n\n    render() {\n        const { commitsTotal, issuesTotal, unitTestsTotal } = this.state;\n        return (\n\n            <Container>\n                <Jumbotron style={{backgroundColor:'c1cadb'}} fluid>\n                    <Container fluid>\n                        <h1 className=\"display-3\">What is Explocation?</h1>\n                        <p className=\"lead\">\n                        Explocation is a web application that provides an simple, effortless way for people to look up events near their area. From family-friendly events to fun nights out, Explocation has events for anyone. Need to grab a bite or park right before or after that concert or party? Plans are made easier with local food and parking recommendations.\n                        </p>\n                        <p>\n                            Interested in our project? Visit our\n                            <a href=\"https://github.com/simon-th/explocation/\">Github Repo</a>\n                        </p>\n                    </Container>\n                </Jumbotron>\n                <h2 id=\"name\">Meet the members of Team Tiger</h2>\n                <p id=\"name\">Hover over a member picture to see individual contribution, or click on it to visit their git profile</p>\n\n                <div>{this.renderProfiles()}</div>\n\n                <h2 id=\"name\">How we made it</h2>\n                <Container>\n                    <ListGroup>\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Statistics:</ListGroupItemHeading>\n                            <ListGroupItemText tag=\"li\">Total Commits: {commitsTotal}</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Issues: {issuesTotal}</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Unit Tests: {unitTestsTotal}</ListGroupItemText>\n                        </ListGroupItem>\n\n                        <CardText>\n                        </CardText>\n\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Data Sources:</ListGroupItemHeading>\n                            <ListGroupItemText tag=\"li\">Eventbrite: Not scraped from website yet</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">SpotHero: Not scraped from website yet</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Google Maps: We took the map visual from Google Maps API.</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Github: We used the Github API to receive user stats from the API url.</ListGroupItemText>\n                        </ListGroupItem>\n\n                        <CardText>\n                        </CardText>\n\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Tools:</ListGroupItemHeading>\n                            <ListGroupItemText tag=\"li\">React: Javascript Library used to design and create sleek user interface.</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">MongoDB: Database storing in event information from Google Maps, Eventbrite, and other data sources. It will also store some user data, such as from login. </ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Express.js: Set up for server use and connected to MongoDB. It is meant to connect the backend to frontend(not yet implemented).</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Google Cloud Platform: Software used to deploy the web application.</ListGroupItemText>\n                        </ListGroupItem>\n                    </ListGroup>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default AboutPage;\n","import React from 'react';\nconst FirebaseContext = React.createContext(null);\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport apiKeys from '../../api-keys.json';\n\nconst config = {\n    apiKey: apiKeys.firebaseAPI,\n    authDomain: apiKeys.authDomain,\n    databaseURL: apiKeys.databaseURL,\n    projectId: apiKeys.projectId,\n    storageBucket: apiKeys.storageBucket,\n    messagingSenderId: apiKeys.messagingSenderId,\n    appId: apiKeys.appId,\n    measurementId: apiKeys.measurementId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext, withFirebase };\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, FormGroup, Label, Input, Form, Row, Col } from \"reactstrap\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Components/Firebase\";\nimport \"./Login.css\";\n\nconst Login = () => (\n    <div>\n        <LoginForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass LoginFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n        this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(\"/\");\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div className=\"Login\">\n                <form onSubmit={this.onSubmit}>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <FormGroup controlId=\"email\" bsSize=\"medium\">\n                                    <Label>Email</Label>\n                                    <Input\n                                      autoFocus\n                                      name=\"email\"\n                                      type=\"text\"\n                                      value={email}\n                                      onChange={this.onChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <FormGroup controlId=\"password\" bsSize=\"medium\">\n                                    <Label>Password</Label>\n                                    <Input\n                                      name=\"password\"\n                                      value={password}\n                                      onChange={this.onChange}\n                                      type=\"password\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <div className=\"text-center\">\n                            <Button bsSize=\"medium\" disabled={isInvalid} type=\"submit\">\n                                Login\n                            </Button>\n                            {error && <p id=\"err\">{error.message}</p>}\n                            <br />\n                            <p id=\"signup\">Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                        </div>\n                    </Form>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst LoginForm = compose(\n    withRouter,\n    withFirebase,\n)(LoginFormBase);\nexport default Login;\nexport { LoginForm };\n","import React, {Component} from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Row, Col, Container\n} from 'reactstrap';\n\n\nclass Explore extends Component {\n  eventList = [\n    {\n      id: 0,\n      title: \"Yash's Birthday\",\n      descr: \"Come celebrate Yash's 21st birthday at Skyloft! It's a study party so bring your own books.\",\n      lat: 30.286358,\n      long: -97.7456957\n    },\n    {\n      id: 1,\n      title: \"Wood Chopping Contest\",\n      descr: \"We're not sure why this is a thing but it is, so come out and chop wood at Gregory Gymanisum.. I guess?\",\n      lat: 30.2842331,\n      long: -97.7386967\n    },\n    {\n      id: 2,\n      title: \"Snakes and Ladders Night\",\n      descr: \"Join us for snakes and ladders at Angel's apartment!\",\n      lat: 30.2870417,\n      long: -97.7461794\n    },\n    {\n      id: 3,\n      title: \"Smash Tournament\",\n      descr: \"Come play Smash at Simon's apartment!\",\n      lat: 30.2900117,\n      long: -97.7445804\n    },\n    {\n      id: 4,\n      title: \"IEEE GM #3\",\n      descr: \"This is the third general meeting for IEEE this semester. As usual, there will be free food, and we will be joined by guests from Arm!\",\n      lat: 30.2884957,\n      long: -97.7376979\n    },\n    {\n      id: 5,\n      title: \"Spongebob Watch Party\",\n      descr: \"We will be watching episodes with Mermaid Man and Barnacle Boy because they are our favorite characters.\",\n      lat: 30.2864807,\n      long: -97.743338\n    },\n    {\n      id: 6,\n      title: \"Gong Cha Profit Share\",\n      descr: \"Boba. Yay.\",\n      lat: 30.3753425,\n      long: -97.8380101\n    }\n  ]\n\n  render () {\n    return(\n      <div>\n        <div classname=\"text-center\">\n          <h2>Events Happening Nearby</h2>\n        </div>\n        <div>\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[0].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[0].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[0].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[1].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[1].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[1].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[2].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[2].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[2].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[3].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[3].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[3].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[4].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[4].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[4].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[5].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[5].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[5].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ size: 8, offset: 1 }}>\n                  <Card>\n                    <CardBody>\n                      <CardTitle>{this.eventList[6].title}</CardTitle>\n                      <CardSubtitle>{this.eventList[6].location}</CardSubtitle>\n                      <CardText className=\"text-left\">{this.eventList[6].descr}</CardText>\n                      <Button color=\"success\" className=\"float-right\">Save</Button>\n                    </CardBody>\n                  </Card>\n              </Col>\n            </Row>\n            <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, FormGroup, Label, Input, Form, Row, Col } from \"reactstrap\";\nimport { compose } from 'recompose';\nimport { withFirebase } from \"../Components/Firebase\";\nimport \"./Signup.css\";\n\nconst SignUp = () => (\n    <div>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n        this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(\"/\");\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n        event.preventDefault();\n    }\n\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === '';\n\n        return (\n            <div className=\"Signup\">\n                <form onSubmit = {this.onSubmit}>\n                    <Form>\n                          <Row>\n                              <Col>\n                                  <FormGroup controlId=\"username\" bsSize=\"medium\">\n                                      <Label>Username</Label>\n                                      <Input\n                                        autoFocus\n                                        name=\"username\"\n                                        type=\"username\"\n                                        value={username}\n                                        onChange={this.onChange}\n                                      />\n                                  </FormGroup>\n                              </Col>\n                          </Row>\n                          <Row>\n                              <Col>\n                                  <FormGroup controlId=\"email\" bsSize=\"medium\">\n                                      <Label>Email</Label>\n                                      <Input\n                                        name=\"email\"\n                                        type=\"email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                      />\n                                  </FormGroup>\n                              </Col>\n                          </Row>\n                          <Row>\n                              <Col>\n                                  <FormGroup controlId=\"passwordOne\" bsSize=\"medium\">\n                                      <Label>Password</Label>\n                                      <Input\n                                        name=\"passwordOne\"\n                                        value={passwordOne}\n                                        onChange={this.onChange}\n                                        type=\"password\"\n                                      />\n                                  </FormGroup>\n                              </Col>\n                          </Row>\n                          <Row>\n                              <Col>\n                                  <FormGroup controlId=\"passwordTwo\" bsSize=\"medium\">\n                                      <Label>Confirm Password</Label>\n                                      <Input\n                                        name=\"passwordTwo\"\n                                        value={passwordTwo}\n                                        onChange={this.onChange}\n                                        type=\"password\"\n                                      />\n                                  </FormGroup>\n                              </Col>\n                          </Row>\n                          <div className=\"text-center\">\n                              <Button bsSize=\"medium\" disabled={isInvalid} type=\"submit\">\n                                Submit\n                              </Button>\n                              {error && <p id=\"err\">{error.message}</p>}\n                              <br />\n                              <p id=\"login\">Already have an account? <Link to='/login'>Login</Link></p>\n                          </div>\n                    </Form>\n                </form>\n            </div>\n        )\n    }\n}\nconst SignUpLink = () => (\n    <p>Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n);\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nexport default SignUp;\nexport { SignUpForm, SignUpLink };\n","import React from 'react';\nimport { Button } from \"reactstrap\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withFirebase } from '../Components/Firebase';\n\nconst useStyles = makeStyles(theme => ({\n  // button: {\n  //   margin: theme.spacing(1),\n  // },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst LogoutButton = ({ firebase }) => (\n  <Button color=\"#c1cadb\" className=\"text-muted\" margin=\"0\" onClick={firebase.doSignOut}>\n        Logout\n  </Button>\n);\nexport default withFirebase(LogoutButton);\n","import React from 'react';\nconst AuthUserContext = React.createContext(null);\nexport default AuthUserContext;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { IndexLinkContainer } from 'react-router-bootstrap';\nimport  MapContainer  from '../EventMap/EventMap';\nimport About from '../About/About'\nimport Login from '../Login/Login'\nimport MyEvents from '../MyEvents/MyEvents';\nimport Explore from '../Explore/Explore';\nimport Signup from '../Signup/Signup';\nimport EventMap  from '../EventMap/EventMap';\nimport LogoutButton from '../Logout/Logout';\nimport { AuthUserContext } from '../Components/Session';\n\nconst Navigation = () => (\n    <div>\n        <AuthUserContext.Consumer>\n            {authUser =>\n              authUser ? <NavigationAuth /> : <NavigationNonAuth />\n            }\n        </AuthUserContext.Consumer>\n    </div>\n);\n\nconst NavigationAuth = () => (\n    <Navbar style={{backgroundColor: '#c1cadb'}} light expand=\"md\">\n        <IndexLinkContainer to=\"/\" exact>\n            <NavbarBrand>Explocation</NavbarBrand>\n        </IndexLinkContainer>\n        <Nav className=\"ml-auto\" navbar>\n            <IndexLinkContainer to=\"/\" exact>\n                <NavLink>Map</NavLink>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/myevents\" exact>\n                <NavLink>My Events</NavLink>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/explore\" exact>\n                <NavLink>Explore</NavLink>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/about\" exact>\n                <NavLink>About Us</NavLink>\n            </IndexLinkContainer>\n            <NavLink>\n                <LogoutButton />\n            </NavLink>\n        </Nav>\n    </Navbar>\n);\n\nconst NavigationNonAuth = () => (\n    <Navbar style={{backgroundColor: '#c1cadb'}} light expand=\"md\">\n        <IndexLinkContainer to=\"/\" exact>\n            <NavbarBrand>Explocation</NavbarBrand>\n        </IndexLinkContainer>\n        <Nav className=\"ml-auto\" navbar>\n            <IndexLinkContainer to=\"/\" exact>\n                <NavLink>Map</NavLink>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/explore\" exact>\n                <NavLink>Explore</NavLink>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/about\" exact>\n                <NavLink>About Us</NavLink>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/login\" exact>\n                <NavLink>Login</NavLink>\n            </IndexLinkContainer>\n        </Nav>\n    </Navbar>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport './App.css';\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { IndexLinkContainer } from 'react-router-bootstrap';\nimport Navigation from './Navigation';\nimport  MapContainer  from '../EventMap/EventMap';\nimport About from '../About/About'\nimport Login from '../Login/Login'\nimport MyEvents from '../MyEvents/MyEvents';\nimport Explore from '../Explore/Explore';\nimport Signup from '../Signup/Signup';\nimport EventMap  from '../EventMap/EventMap';\nimport LogoutButton from '../Logout/Logout';\nimport { withAuthentication } from '../Components/Session';\n\n\nconst App = () => (\n    <Router>\n        <div>\n            <Navigation />\n            <Switch>\n                <Route exact path ='/' render={props=>(\n                  <React.Fragment>\n                    <h1>Map</h1>\n                    <div className='Map'>\n                    <MapContainer />\n                    </div>\n                  </React.Fragment>\n                )}/>\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/login\" component={Login}/>\n                <Route path=\"/myevents\" component={MyEvents}/>\n                <Route path=\"/explore\" component={Explore}/>\n                <Route path=\"/map\" component={EventMap}/>\n                <Route path=\"/signup\" component={Signup}/>\n            </Switch>\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {authUser: null,};\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n              authUser => {\n                authUser\n                  ? this.setState({ authUser })\n                  : this.setState({ authUser: null });\n              },\n            );\n        }\n        componentWillUnmount() {\n            this.listener();\n        }\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                  <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Firebase, { FirebaseContext } from './Components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}