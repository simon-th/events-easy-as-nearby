{"version":3,"sources":["About/angel.jpg","About/simon.jpg","About/yash.jpg","About/jovin.jpg","About/shania.jpg","About/huy.jpg","EventMap/Geolocation.js","EventMap/EventMap.js","About/About.js","App/Header.js","LoginPage/LoginPage.js","MyEvents/MyEvents.js","Explore/Explore.js","LoginPage/RegisterPage.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","mapStyles","position","width","height","left","CurrentLocation","props","initialCenter","lat","lng","state","currentLocation","prevProps","prevState","google","this","loadMap","recenterMap","map","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","style","ref","renderChildren","Component","defaultProps","visible","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","onClick","name","GoogleApiWrapper","apiKeys","googleMaps","contributorInfo","angellynncheng","image","Angel","username","major","bio","responsibilities","Simon","Yash","jovinjoej","Jovin","shaniapaul","Shania","qhuy2301","Huy","defContributorStats","commits","issues","unitTests","AboutPage","contributorStats","issuesTotal","commitsTotal","unitTestsTotal","contributorKeys","attemptFetch","url","n","a","i","fetch","response","console","log","status","json","data","error","fetchGithubStats","forEach","contributor","author","login","total","issue","user","fetchIssues","fetchCommits","calculateUnitTests","id","Card","key","body","cursor","padding","className","tag","window","open","CardHeader","flipOnHover","flipOnClick","flipDirection","r","flippy","align","CardImg","top","src","alt","backgroundColor","profiles","length","push","Container","CardDeck","renderProfile","CardText","Jumbotron","fluid","href","renderProfiles","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","Header","Navbar","color","light","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","loginStyles","display","flexDirection","alignItems","Login","type","placeholder","to","MyEvents","Explore","regStyle","Register","App","callBackendAPI","Error","message","then","res","express","catch","err","exact","path","render","Fragment","component","About","Boolean","location","hostname","match","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1267a024.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angel.37b26633.jpg\";","module.exports = __webpack_public_path__ + \"static/media/simon.abeddfa6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yash.f44569c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jovin.66916f81.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shania.72c7f34a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/huy.839e144d.jpg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '50%',\n    height: '50%',\n    left: '350px'\n  }\n};\n\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n   recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n   renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n     const style = Object.assign({}, mapStyles.map);\n    return (\n      <div>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n\n}\n\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -1.2884,\n    lng: 36.8233\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};","import React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from './Geolocation';\nimport apiKeys from '../api-keys.json';\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CurrentLocation\n        centerAroundCurrentLocation\n        google={this.props.google}\n      >\n        <Marker onClick={this.onMarkerClick} name={'current location'} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n\n\nexport default GoogleApiWrapper({\n  'apiKey': apiKeys.googleMaps\n})(MapContainer);\n","import React from 'react';\nimport './About.css';\nimport {\n    Card,\n    CardImg,\n    CardText,\n    Container,\n    CardDeck,\n    CardHeader,\n    Jumbotron,\n    ListGroup,\n    ListGroupItem,\n    ListGroupItemHeading,\n    ListGroupItemText\n} from 'reactstrap';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport Angel from './angel.jpg';\nimport Simon from './simon.jpg';\nimport Yash from './yash.jpg';\nimport Jovin from './jovin.jpg';\nimport Shania from './shania.jpg';\nimport Huy from './huy.jpg';\n\nconst contributorInfo = {\n    angellynncheng: {\n        name: 'Angel Cheng',\n        image: Angel,\n        username: 'angellynncheng',\n        major: 'Electrical & Computer Enginner',\n        bio:\n            'Add your bio',\n        responsibilities:\n            'Add your responsibilities'\n    },\n    'simon-th': {\n        name: 'Simon Hoque',\n        image: Simon,\n        username: 'simon-th',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Add your bio',\n        responsibilities:\n            'Add your responsibilities'\n    },\n    'ifis98': {\n        name: 'Yash Lad',\n        image: Yash,\n        username: 'ifis98',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Add your bio',\n        responsibilities:\n            'Add your responsibilities'\n    },\n    jovinjoej: {\n        name: 'Jovin Joseph',\n        image: Jovin,\n        username: 'jovinjoej',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Add your bio',\n        responsibilities:\n            'Add your responsibilities'\n    },\n    shaniapaul: {\n        name: 'Shania Paul',\n        image: Shania,\n        username: 'shaniapaul',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Add your bio',\n        responsibilities:\n            'Add your responsibilities'\n    },\n    qhuy2301: {\n        name: 'Huy Le',\n        image: Huy,\n        username: 'qhuy2301',\n        major: 'Electrical & Computer Engineer',\n        bio:\n            'Add your bio',\n        responsibilities:\n            'Add your responsibilities'\n    }\n};\n\nconst defContributorStats = {\n    angellynncheng: {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'simon-th': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    'ifis98': {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    jovinjoej: {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    shaniapaul: {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    },\n    qhuy2301: {\n        commits: 0,\n        issues: 0,\n        unitTests: 0\n    }\n};\n\nclass AboutPage extends React.Component {\n    state = {\n        contributorStats: defContributorStats,\n        issuesTotal: 0,\n        commitsTotal: 0,\n        unitTestsTotal: 0\n    };\n\n    contributorKeys = ['angellynncheng', 'simon-th', 'ifis98', 'jovinjoej', 'shaniapaul', 'qhuy2301'];\n\n    componentDidMount() {\n        console.log('componentDidMount');\n        this.fetchGithubStats();\n    }\n\n    attemptFetch = async (url, n) => {\n        let error;\n        for (let i = 0; i < n; i++) {\n            try {\n                // fetch() and json() are asynchronous\n                // we use await to make the main thread wait until the asynchronous thread terminates and returns a value\n                const response = await fetch(url); // make get request to url and wait until response is returned\n                console.log('fetch response', response);\n                if (response.status === 200) {\n                    const data = await response.json(); // convert response to a json object and wait until the data is returned\n                    console.log('data', data);\n                    return data;\n                }\n            } catch (err) {\n                error = err;\n            }\n        }\n        throw error;\n    };\n\n    async fetchCommits() {\n        let commitsTotal = 0;\n        const url = 'https://api.github.com/repos/simon-th/explocation/stats/contributors';\n\n        try {\n            const data = await this.attemptFetch(url, 3);\n            // loop through array\n            console.log('fetchCommits', data);\n            data.forEach(contributor => {\n                const username = contributor.author.login;\n                defContributorStats[username].commits = contributor.total;\n                commitsTotal += contributor.total;\n            });\n\n            this.setState({ commitsTotal });\n        } catch (err) {\n            console.log('error fetching stats check connection');\n        }\n    }\n\n    async fetchIssues() {\n        let issuesTotal = 0;\n        const url = 'https://api.github.com/repos/simon-th/explocation/issues';\n\n        try {\n            const data = await this.attemptFetch(url, 3);\n            console.log('fetchIssues', data);\n            data.forEach(issue => {\n                const username = issue.user.login;\n                defContributorStats[username].issues++;\n                issuesTotal++;\n            });\n\n            this.setState({ issuesTotal });\n        } catch (err) {\n            console.log('error fetching stats check connection');\n        }\n    }\n\n    fetchGithubStats() {\n        this.fetchIssues();\n        this.fetchCommits();\n        this.calculateUnitTests();\n        this.setState({ contributorStats: defContributorStats });\n    }\n\n    calculateUnitTests() {\n        let unitTestsTotal = 0;\n        this.contributorKeys.forEach(username => {\n            unitTestsTotal += defContributorStats[username].unitTests;\n        });\n        this.setState({ unitTestsTotal });\n    }\n\n    renderProfile(id) {\n        const username = this.contributorKeys[id];\n        const { contributorStats } = this.state;\n\n        return (\n          <Card\n                key={id}\n                body\n                style={{cursor: 'pointer', padding: '0'}}\n                width=\"80%\"\n                className=\"text-center\"\n                tag=\"a\"\n                onClick={() => window.open(`https://github.com/${username}`)}\n            >\n            <CardHeader className=\"text-center\" tag=\"name\">\n                      {contributorInfo[username].name}\n                  </CardHeader>\n              <Flippy\n                  flipOnHover={true}\n                  flipOnClick={false}\n                  flipDirection=\"horizontal\"\n                  ref={(r) => this.flippy = r}\n              >\n                  <FrontSide style={{align: 'center', padding: '0'}}>\n                      <CardImg top width=\"100%\" src={contributorInfo[username].image} alt=\"Error\" style={{align: 'center'}} />\n                  </FrontSide>\n                  <BackSide style={{ backgroundColor: 'white', align: 'center'}}>\n                      <p id=\"b\">Major: {contributorInfo[username].major}<br/>\n                      Username: {contributorInfo[username].username}<br/>\n                      Commits: {contributorStats[username].commits}<br/>\n                      Issues: {contributorStats[username].issues}<br/>\n                      Unit Tests: {contributorStats[username].unitTests}<br/>\n                      </p>\n                      <p id=\"b\">Bio: {contributorInfo[username].bio}</p>\n                      <p id=\"b\">Responsibilities: {contributorInfo[username].responsibilities}</p>\n                  </BackSide>\n              </Flippy>\n            </Card>\n        );\n    }\n\n    renderProfiles() {\n        const profiles = [];\n        for (let id = 0; id < this.contributorKeys.length; id += 3) {\n            // render each row\n            profiles.push(\n                <Container key={id}>\n                    <CardDeck tag=\"cd\" style = {{align: 'center'}}>\n                        {this.renderProfile(id)}\n                        {this.renderProfile(id + 1)}\n                        {this.renderProfile(id + 2)}\n                    </CardDeck>\n                    <CardText>\n                        <CardText> </CardText>\n                    </CardText>\n                </Container>\n            );\n        }\n        return profiles;\n    }\n\n    render() {\n        const { commitsTotal, issuesTotal, unitTestsTotal } = this.state;\n        return (\n\n            <Container>\n                <Jumbotron style={{backgroundColor:'c1cadb'}} fluid>\n                    <Container fluid>\n                        <h1 className=\"display-3\">What is Explocation?</h1>\n                        <p className=\"lead\">\n                            Project description\n                        </p>\n                        <p>\n                            Interested in our project? Visit our\n                            <a href=\"https://github.com/simon-th/explocation/\">Github Repo</a>\n                        </p>\n                    </Container>\n                </Jumbotron>\n                <h2 id=\"name\">Meet the Team Members</h2>\n                <p id=\"name\">Hover over a member picture to see individual contribution, or click on it to visit their git profile</p>\n\n                <div>{this.renderProfiles()}</div>\n\n                <Container>\n                    <ListGroup>\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Statistics:</ListGroupItemHeading>\n                            <ListGroupItemText tag=\"li\">Total Commits: {commitsTotal}</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Issues: {issuesTotal}</ListGroupItemText>\n                            <ListGroupItemText tag=\"li\">Unit Tests: {unitTestsTotal}</ListGroupItemText>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Data Sources:</ListGroupItemHeading>\n\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <ListGroupItemHeading>Tools:</ListGroupItemHeading>\n                        </ListGroupItem>\n                    </ListGroup>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport './App.css';\n\nclass Header extends Component {\n    render() {\n        return (\n          <Router>\n              <div>\n                  <Navbar color=\"black\" light expand=\"md\">\n                      <NavbarBrand href=\"/\">Explocation</NavbarBrand>\n                      <Nav className=\"ml-auto\" navbar>\n                          <NavItem>\n                              <NavLink href=\"/\">Map</NavLink>\n                          </NavItem>\n                          <NavItem>\n                              <NavLink href=\"/myevents\">My Events</NavLink>\n                          </NavItem>\n                          <NavItem>\n                              <NavLink href=\"/explore\">Explore</NavLink>\n                          </NavItem>\n                          <NavItem>\n                              <NavLink href=\"/about\">About Us</NavLink>\n                          </NavItem>\n                          <NavItem>\n                              <NavLink href=\"/login\">Login</NavLink>\n                          </NavItem>\n                      </Nav>\n                  </Navbar>\n              </div>\n          </Router>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n//import './App.css';\nimport {Link}  from 'react-router-dom';\n\nconst loginStyles = {\n   display: 'flex',\n   flexDirection: 'column',\n   alignItems: 'center',\n   padding:'50px'\n  };\nfunction Login(){\n    return(\n        <div className='Login' style={loginStyles}>\n            <input type=\"text\" placeholder=\"Username\"/>\n            <input type=\"text\" placeholder=\"Password\"/>\n            <button>Login</button>\n            <Link to='/register'>Register</Link>\n        </div>\n    )\n}\n\nexport default Login;\n","import React from 'react'\n\nfunction MyEvents(){\n    return(\n        <div>\n            <label>This is where my events will be saved</label>\n        </div>\n    )\n}\n\nexport default MyEvents;\n","import React from 'react'\r\n\r\nfunction Explore(){\r\n    return(\r\n        <div>\r\n            <label>Lots of events listed here.</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Explore;","import React from 'react';\nimport {Link} from 'react-router-dom';\nconst regStyle ={\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n}\nfunction Register(){\n    return(\n        \n        <div style={regStyle}>\n            <h1>Register</h1>\n            <input type=\"text\" placeholder=\"Username\"/>\n            <input type=\"text\" placeholder=\"Password\"/>\n            <input type=\"text\" placeholder=\"Confirm Password\"/>\n            <input type=\"text\" placeholder=\"Email Address\"/>\n            <button>Register</button>\n            <Link to='/login'>Back to Login</Link>\n            \n        </div>\n    )\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\n//import styles from \"./App.css\"\nimport  MapContainer  from '../EventMap/EventMap';\nimport About from '../About/About'\nimport Header from './Header'\nimport Login from '../LoginPage/LoginPage'\nimport MyEvents from '../MyEvents/MyEvents';\nimport Explore from '../Explore/Explore';\nimport Register from '../LoginPage/RegisterPage';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\n\n// import logo from './logo.svg';\n// import styles from \"./App.css\"\n\nclass App extends Component {\n  state = {\n    data: null\n  };\n\n  componentDidMount() {\n    console.log(\"Mounted\");\n    this.callBackendAPI()\n    .then(res => this.setState({data: res.express}))\n    .catch(err => console.log(err))\n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('/backend');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header  />\n          <Route exact path ='/' render={props=>(\n            <React.Fragment>\n              <h1>Map</h1>\n              <p>\n                {this.state.data}\n              </p>\n              <div className='Map'>\n              <MapContainer />\n              </div>\n            </React.Fragment>\n          )}/>\n          <Route path='/about' component={About}/>\n          <Route path='/login' component={Login}/>\n          <Route path='/myevents' component={MyEvents}/>\n          <Route path='/explore' component={Explore}/>\n        <Route path = '/register' component={Register}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}